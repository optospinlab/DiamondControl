%Notes:
%Set Not Interruptable tags on all the functions (Except on move btn!)

%--------------------------------------------------------------------------
function varargout = Conex_gui_export(varargin)
global sx; global sy;global device_xaddr; global device_yaddr;
% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Conex_gui_export_OpeningFcn, ...
                   'gui_OutputFcn',  @Conex_gui_export_OutputFcn, ...
                   'gui_LayoutFcn',  @Conex_gui_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before Conex_gui_export is made visible.
function Conex_gui_export_OpeningFcn(hObject, eventdata, handles, varargin)
% Choose default command line output for Conex_gui_export
global active; active=0;
handles.output = hObject;
guidata(hObject, handles);
%--------------------------------------------------------------------------

%%% Edited 7/10/2015 Srivatsa
% --- Outputs from this function are returned to the command line.
function varargout = Conex_gui_export_OutputFcn(hObject, eventdata, handles) 

%Refresh Device Status
global sx; global sy; global device_xaddr; global device_yaddr;
global init_first;global init_done;

init_first=0;
init_done=0;
stx='Not Connected';
sty='Not Connected';
xpos='Null';
ypos='Null';

while ~0 
    try
        if init_first==1 
            stx=status(sx,device_xaddr);
            xpos=pos(sx,device_xaddr);
            
            sty=status(sy,device_yaddr);
            ypos=pos(sy,device_yaddr);
        end
        
        set(handles.status_x,'String',stx);
        set(handles.xpos,'String',xpos);
        
        set(handles.status_y,'String',sty);
        set(handles.ypos,'String',ypos);
        
        guidata(hObject, handles);
        
    catch
        disp('GUI CLOSED');
        % Should I move to zero position before shutdown??
        try %to stop error when we close gui without initialization
            cmd(sx,device_xaddr,'RS'); %Reset X-Axis
            fclose(sx); delete(sx); clear sx;

            cmd(sy,device_yaddr,'RS'); %Reset Y-Axis
            fclose(sy); delete(sy); clear sy;
            disp('Serial connections closed')
        catch
            disp('No serial connections were made')
        end
        break;
    end  
    pause(2); % run every 2sec
end
varargout{1} = handles.output;

% --- Executes on button press in move_btn.
function move_btn_Callback(hObject, eventdata, handles)
global sx; global sy;global device_xaddr; global device_yaddr;
global xin; global yin;global active; global init_done;
button_state = get(hObject,'Value');
if button_state==1 && active==0 && init_done==1
	cmd(sx,device_xaddr,['SE' xin]); %Queue X-Axis
    cmd(sy,device_yaddr,['SE' yin]); %Queue Y-Axis
    %start simultaneous move
    fprintf(sx,'SE'); fprintf(sy,'SE');
    stx=status(sx,device_xaddr);
    sty=status(sy,device_yaddr);
    disp('Started move'); %Debug
    %Only one move command should be passed to the device
    while ~strcmp([stx(last-1) stx(last)],'33') && ~strcmp([sty(last-1) sty(last)],'33')
        active=1;
        stx=status(sx,device_xaddr);
        sty=status(sy,device_yaddr);
    end    
    disp('Finished move'); %Debug
    active=0;  
end
set(hObject,'Value',0); %Reset the button state

% --- Executes on button press in config_btn.
function config_btn_Callback(hObject, eventdata, handles)
global sx; global sy;global device_xaddr; global device_yaddr;
global init_done;
button_state = get(hObject,'Value');
if button_state==1 && init_done==1
%do something
set(hObject,'Value',0); %Reset the button state
end

% --- Executes on button press in reset_btn.
function reset_btn_Callback(hObject, eventdata, handles)
global sx; global sy;global device_xaddr; global device_yaddr;
global init_done; global active;
button_state = get(hObject,'Value');
if button_state==1 && init_done==1
    active=0;
    init_done = 0;
    cmd(sx,device_xaddr,'RS'); %Reset X-Axis
    cmd(sy,device_yaddr,'RS'); %Reset Y-Axis
    pause(5);
end
set(hObject,'Value',0); %Reset the button state

% --- Executes on button press in init_btn.
function init_btn_Callback(hObject, eventdata, handles)
global sx; global sy;global device_xaddr; global device_yaddr;
global init_done;global init_first;
button_state = get(hObject,'Value');
if button_state==1 && init_done==0 && init_first==0
	display('Starting Initialization Sequence');
    
        %X-axis actuator
        device_port='COM17';
        device_xaddr='1';
    try
        sx = serial(device_port); 
        set(sx,'BaudRate',921600,'DataBits',8,'Parity','none','StopBits',1, ...
            'FlowControl', 'software','Terminator', 'CR/LF');
        fopen(sx);
        pause(1); 
        cmd(sx,device_xaddr,'OR'); %Get to home state (reset position)

        display('Done Initializing X Axis');

        %Y-axis actuator
        device_port='COM18';
        device_yaddr='1';
        
        sy = serial(device_port);
        set(sy,'BaudRate',921600,'DataBits',8,'Parity','none','StopBits',1, ...
            'FlowControl', 'software','Terminator', 'CR/LF');
        fopen(sy);
        pause(1); cmd(sy,device_yaddr,'OR'); %Go to home state
        display('Done Initializing Y Axis');
        
    init_done = 1; init_first=1;
    guidata(hObject,handles);
    
    catch
        disp('Controller Disconnected !!!');
    end   
end

if button_state==1 && init_done==0 && init_first==1
    display('Starting Re-Initialization Sequence');
    %X-axis actuator
    cmd(sx,device_xaddr,'OR'); %Get to home state (reset position)
    display('Done Initializing X Axis');
    %Y-axis actuator
    cmd(sy,device_yaddr,'OR'); %Get to home state (reset position)
    display('Done Initializing Y Axis');
end
set(hObject,'Value',0); %Reset the button state

%-------------------------------------------------------------------------
%%Take X Y input
function edit3_Callback(hObject, eventdata, handles)
global xin;
xin=get(hObject,'String');

% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function edit4_Callback(hObject, eventdata, handles)
global yin;
yin=get(hObject,'String');

% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in stop_btn.
function stop_btn_Callback(hObject, eventdata, handles)
global sx; global sy; global active; global init_done;
button_state = get(hObject,'Value');
if button_state==1 && active==1 && init_done==1
    fprintf(sx,'ST'); %stop X axis motion
    fprintf(sy,'ST'); %stop Y axis motion
    active=0;
end
set(hObject,'Value',0); %Reset the button state

% --- Executes on button press in inc_x.
function inc_x_Callback(hObject, eventdata, handles)
global sx; global device_xaddr; global step; global init_done;
button_state = get(hObject,'Value');
if button_state==1 && init_done==1
    cmd(sx,device_xaddr,['PR' step]);
end
set(hObject,'Value',0); %Reset the button state

% --- Executes on button press in dec_x.
function dec_x_Callback(hObject, eventdata, handles)
global sx; global device_xaddr; global step; global init_done;
button_state = get(hObject,'Value');
if button_state==1 && init_done==1
    cmd(sx,device_xaddr,['PR' '-' step]);
end
set(hObject,'Value',0); %Reset the button state

% --- Executes on button press in inc_y.
function inc_y_Callback(hObject, eventdata, handles)
global sy; global device_yaddr; global step; global init_done;
button_state = get(hObject,'Value');
if button_state==1 && init_done==1
    cmd(sy,device_yaddr,['PR' step]);
end
set(hObject,'Value',0); %Reset the button state

% --- Executes on button press in dec_y.
function dec_y_Callback(hObject, eventdata, handles)
global sy; global device_yaddr; global step;global init_done;
button_state = get(hObject,'Value');
if button_state==1 && init_done==1
    cmd(sy,device_yaddr,['PR' '-' step]);
end
set(hObject,'Value',0); %Reset the button state

%Keyboard controls for manual fine tuning
% --- Executes on key press with focus on figure1 or any of its controls.
function figure1_WindowKeyPressFcn(hObject, eventdata, handles)
global sx; global device_xaddr; global sy; global device_yaddr;global step;
global init_done;
if init_done==1
    switch eventdata.Key
    case 'uparrow'
        disp('up')
        cmd(sy,device_yaddr,['PR' step]);
    case 'downarrow'
        disp('down')
        cmd(sy,device_yaddr,['PR' '-' step]);
    case 'leftarrow'
        disp('left')
        cmd(sx,device_xaddr,['PR' '-' step]);
    case 'rightarrow'
        disp('right')
        cmd(sx,device_xaddr,['PR' step]);
    end
end


function step_Callback(hObject, eventdata, handles)
global step;
step=get(hObject,'String');

% --- Executes during object creation, after setting all properties.
function step_CreateFcn(hObject, eventdata, handles)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes during object creation, after setting all properties.
function status_x_CreateFcn(hObject, eventdata, handles)
% hObject    handle to status_x (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called


%----From Ian's Guid design------------------------------------------------
%--------------------------------------------------------------------------
% --- Executes on button press in checkbox1.
function checkbox1_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox1


% --- Executes on button press in checkbox2.
function checkbox2_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox2


% --- Executes on button press in checkbox3.
function checkbox3_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox3


% --- Creates and returns a handle to the GUI figure. 
function h1 = Conex_gui_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', [], ...
    'pushbutton', [], ...
    'edit', 12, ...
    'uipanel', [], ...
    'text', 13, ...
    'togglebutton', 15, ...
    'axes', [], ...
    'checkbox', []), ...
    'override', [], ...
    'release', 13, ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', [], ...
    'callbacks', [], ...
    'singleton', [], ...
    'syscolorfig', [], ...
    'blocking', 0, ...
    'lastSavedFile', 'U:\FULab\DiamondControl-master\7_10_2015\Conex_gui_export.m', ...
    'lastFilename', 'U:\FULab\DiamondControl-master\7_10_2015\Conex_gui.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'Units','characters',...
'Color',[0.941176470588235 0.941176470588235 0.941176470588235],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar','none',...
'Name','NVScope',...
'NumberTitle','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'Position',[103.8 13.6923076923077 190 47.7692307692308],...
'Resize','off',...
'WindowKeyPressFcn',@(hObject,eventdata)Conex_gui_export('figure1_WindowKeyPressFcn',hObject,eventdata,guidata(hObject)),...
'HandleVisibility','callback',...
'UserData',[],...
'Tag','figure1',...
'Visible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel8';

h2 = uipanel(...
'Parent',h1,...
'Units','characters',...
'FontSize',12,...
'ForegroundColor',[0 0 1],...
'Title','Linear Actuator',...
'UserData',[],...
'Clipping','on',...
'BackgroundColor',[0.67843137254902 0.92156862745098 1],...
'Position',[3.4 0.692307692307693 88 20.5384615384615],...
'Tag','uipanel8',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel1';

h3 = uipanel(...
'Parent',h2,...
'Units','characters',...
'Title','Position Control',...
'Clipping','on',...
'Position',[39.2 5.69230769230771 46.8 12.7692307692308],...
'Tag','uipanel1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'step';

h4 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'BackgroundColor',[],...
'Callback',@(hObject,eventdata)Conex_gui_export('step_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[31.6 2.69230769230769 10.2 2.07692307692308],...
'String',' step',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Conex_gui_export('step_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','step');

appdata = [];
appdata.lastValidTag = 'dec_y';

h5 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('dec_y_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',13,...
'Position',[37.8 5.30769230769231 4.4 1.76923076923077],...
'String','-',...
'Style','togglebutton',...
'Interruptible','off',...
'Tag','dec_y',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'inc_y';

h6 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('inc_y_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'Position',[31.4 5.30769230769231 4.4 1.76923076923077],...
'String','+',...
'Style','togglebutton',...
'Interruptible','off',...
'Tag','inc_y',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'dec_x';

h7 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('dec_x_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',13,...
'Position',[37.8 7.84615384615385 4.4 1.76923076923077],...
'String','-',...
'Style','togglebutton',...
'Interruptible','off',...
'Tag','dec_x',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'inc_x';

h8 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('inc_x_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'KeyPressFcn',@(hObject,eventdata)Conex_gui_export('inc_x_KeyPressFcn',hObject,eventdata,guidata(hObject)),...
'Position',[31.4 7.84615384615385 4.4 1.76923076923077],...
'String','+',...
'Style','togglebutton',...
'Interruptible','off',...
'Tag','inc_x',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'move_btn';

h9 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('move_btn_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'ForegroundColor',[0 0.447058823529412 0.741176470588235],...
'Position',[13 2.76923076923077 16.6 1.92307692307692],...
'String','Move',...
'Style','togglebutton',...
'ButtonDownFcn',@(hObject,eventdata)Conex_gui_export('move_btn_ButtonDownFcn',hObject,eventdata,guidata(hObject)),...
'BusyAction','cancel',...
'HitTest','off',...
'SelectionHighlight','off',...
'Tag','move_btn',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text2';

h10 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'CData',[],...
'Position',[1.6 5 10.6 1.38461538461538],...
'String','YPos',...
'Style','text',...
'UserData',[],...
'Tag','text2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text1';

h11 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'Position',[1.6 7.99999999999999 10.6 1.38461538461538],...
'String','XPos',...
'Style','text',...
'Tag','text1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit4';

h12 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'BackgroundColor',[],...
'Callback',@(hObject,eventdata)Conex_gui_export('edit4_Callback',hObject,eventdata,guidata(hObject)),...
'CData',[],...
'Position',[13 5.23076923076923 16.4 1.92307692307692],...
'String','(0-25) mm',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Conex_gui_export('edit4_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'UserData',[],...
'Tag','edit4');

appdata = [];
appdata.lastValidTag = 'edit3';

h13 = uicontrol(...
'Parent',h3,...
'Units','characters',...
'BackgroundColor',[],...
'Callback',@(hObject,eventdata)Conex_gui_export('edit3_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[13 7.76923076923077 16.4 1.92307692307692],...
'String','(0-25) mm',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Conex_gui_export('edit3_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit3');

appdata = [];
appdata.lastValidTag = 'uipanel4';

h14 = uipanel(...
'Parent',h2,...
'Units','characters',...
'Title','Current Position',...
'Clipping','on',...
'Position',[2.4 10.7692307692308 34.6 7.69230769230769],...
'Tag','uipanel4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'ypos';

h15 = uicontrol(...
'Parent',h14,...
'Units','characters',...
'Position',[12.2 0.846153846153847 20.2 1.92307692307692],...
'String','-',...
'Style','text',...
'Tag','ypos',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'xpos';

h16 = uicontrol(...
'Parent',h14,...
'Units','characters',...
'Position',[12.2 3.84615384615385 20.2 1.92307692307692],...
'String','-',...
'Style','text',...
'Tag','xpos',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text6';

h17 = uicontrol(...
'Parent',h14,...
'Units','characters',...
'CData',[],...
'ForegroundColor',[0 0.447058823529412 0.741176470588235],...
'Position',[1.6 1.15384615384616 12.6 1.38461538461539],...
'String','YPos: ',...
'Style','text',...
'UserData',[],...
'Tag','text6',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text5';

h18 = uicontrol(...
'Parent',h14,...
'Units','characters',...
'ForegroundColor',[0 0.447058823529412 0.741176470588235],...
'Position',[1.6 4.15384615384616 12.8 1.38461538461539],...
'String','XPos: ',...
'Style','text',...
'Tag','text5',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel5';

h19 = uipanel(...
'Parent',h2,...
'Units','characters',...
'Title','Status',...
'Clipping','on',...
'Position',[2.8 5.69230769230771 34 4.46153846153846],...
'Tag','uipanel5',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'status_x';

h20 = uicontrol(...
'Parent',h19,...
'Units','characters',...
'CData',[],...
'Position',[2 0.692307692307692 13.8 1.92307692307692],...
'String','-',...
'Style','text',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Conex_gui_export('status_x_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'UserData',[],...
'Tag','status_x');

appdata = [];
appdata.lastValidTag = 'status_y';

h21 = uicontrol(...
'Parent',h19,...
'Units','characters',...
'Position',[17.8 0.692307692307692 13.8 1.92307692307692],...
'String','-',...
'Style','text',...
'Tag','status_y',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel6';

h22 = uipanel(...
'Parent',h2,...
'Units','characters',...
'Title',blanks(0),...
'Clipping','on',...
'Position',[2.8 1.53846153846153 83 3.92307692307692],...
'Tag','uipanel6',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'stop_btn';

h23 = uicontrol(...
'Parent',h22,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('stop_btn_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'ForegroundColor',[1 0 0],...
'Position',[43.0000000000002 0.923076923076923 16.6 1.92307692307692],...
'String','Stop',...
'Style','togglebutton',...
'BusyAction','cancel',...
'HitTest','off',...
'Interruptible','off',...
'SelectionHighlight','off',...
'Tag','stop_btn',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'init_btn';

h24 = uicontrol(...
'Parent',h22,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('init_btn_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'ForegroundColor',[0 0.498039215686275 0],...
'Position',[22.4 0.923076923076923 16.6 1.92307692307692],...
'String','Initialize',...
'Style','togglebutton',...
'BusyAction','cancel',...
'HitTest','off',...
'Interruptible','off',...
'SelectionHighlight','off',...
'Tag','init_btn',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'reset_btn';

h25 = uicontrol(...
'Parent',h22,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('reset_btn_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'ForegroundColor',[0.870588235294118 0.490196078431373 0],...
'Position',[63.6000000000002 0.923076923076923 16.6 1.92307692307692],...
'String','Reset',...
'Style','togglebutton',...
'BusyAction','cancel',...
'HitTest','off',...
'Interruptible','off',...
'SelectionHighlight','off',...
'Tag','reset_btn',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'config_btn';

h26 = uicontrol(...
'Parent',h22,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('config_btn_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'ForegroundColor',[0.749019607843137 0 0.749019607843137],...
'Position',[1.8 0.923076923076923 16.6 1.92307692307692],...
'String','Configure',...
'Style','togglebutton',...
'BusyAction','cancel',...
'HitTest','off',...
'Interruptible','off',...
'SelectionHighlight','off',...
'Tag','config_btn',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel9';

h27 = uipanel(...
'Parent',h1,...
'Units','characters',...
'FontSize',12,...
'ForegroundColor',[0 0 1],...
'Title','Galvo',...
'UserData',[],...
'Clipping','on',...
'BackgroundColor',[0.854901960784314 0.701960784313725 1],...
'Position',[92.6 0.692307692307692 47.2 20.5384615384615],...
'Tag','uipanel9',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'axes1';

h28 = axes(...
'Parent',h1,...
'Units','characters',...
'Position',[9.40000000000002 23.9230769230769 60.4 23.1538461538462],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[31.356 5.23769230769231 22.914 3.57115384615385],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','axes1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h29 = get(h28,'title');

set(h29,...
'Parent',h28,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[0.498344370860927 1.02159468438538 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h30 = get(h28,'xlabel');

set(h30,...
'Parent',h28,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[0.498344370860927 -0.0780730897009969 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h31 = get(h28,'ylabel');

set(h31,...
'Parent',h28,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[-0.0943708609271523 0.496677740863787 1.00005459937205],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h32 = get(h28,'zlabel');

set(h32,...
'Parent',h28,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[-0.157284768211921 1.02491694352159 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'axes2';

h33 = axes(...
'Parent',h1,...
'Units','characters',...
'Position',[79.8000000000001 23.9230769230769 60.4 23.1538461538462],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[31.356 5.23769230769231 22.914 3.57115384615385],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','axes2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h34 = get(h33,'title');

set(h34,...
'Parent',h33,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[0.498344370860927 1.02159468438538 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h35 = get(h33,'xlabel');

set(h35,...
'Parent',h33,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[0.498344370860927 -0.0780730897009969 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h36 = get(h33,'ylabel');

set(h36,...
'Parent',h33,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[-0.0943708609271527 0.496677740863787 1.00005459937205],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h37 = get(h33,'zlabel');

set(h37,...
'Parent',h33,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',[],...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',[],...
'Position',[-1.32284768211921 1.02491694352159 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'uipanel10';

h38 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title','Enable Inputs',...
'Clipping','on',...
'Position',[142.8 12.2307692307692 23 8.69230769230769],...
'Tag','uipanel10',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'checkbox2';

h39 = uicontrol(...
'Parent',h38,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('checkbox2_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[2.6 3.07692307692307 15 1.76923076923077],...
'String','Keyboard',...
'Style','checkbox',...
'Tag','checkbox2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'checkbox3';

h40 = uicontrol(...
'Parent',h38,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('checkbox3_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[2.6 1.15384615384615 15 1.76923076923077],...
'String','Joystick',...
'Style','checkbox',...
'Tag','checkbox3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'checkbox1';

h41 = uicontrol(...
'Parent',h38,...
'Units','characters',...
'Callback',@(hObject,eventdata)Conex_gui_export('checkbox1_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[2.6 5 15 1.76923076923077],...
'String','Mouse',...
'Style','checkbox',...
'Tag','checkbox1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % CONEX_GUI_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % CONEX_GUI_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % CONEX_GUI_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % CONEX_GUI_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
    %workaround for CreateFcn not called to create ActiveX
    if feature('HGUsingMATLABClasses')
        peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
        for i=1:length(peers)
            if isappdata(peers(i),'Control')
                actxproxy(peers(i));
            end            
        end
    end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


